/**
 * @OnlyCurrentDoc
 *
 * Este script encontra o arquivo com a data de criação mais recente
 * em uma pasta específica do Google Drive e insere essa data, com um cabeçalho,
 * em uma planilha Google.
 */
function encontrarDataMaisRecente() {
  // --- CONFIGURAÇÕES ---
  // Substitua os valores abaixo com as suas informações.

  // 1. ID da sua pasta do Google Drive.
  // O ID é a parte final da URL quando você abre a pasta.
  // Exemplo: .../folders/AQUI_VAI_O_ID_DA_PASTA
  const ID_PASTA = '1btAl39hd-AdJ3Ty8LNROWO01hMpVDWcY';

  // 2. ID da sua planilha Google.
  // O ID está na URL da planilha.
  // Exemplo: .../d/AQUI_VAI_O_ID_DA_PLANILHA/edit
  const ID_PLANILHA = '1usrzEQ1U5FMuIsDX0pYfVg0qP2NTQTwwot8gKGnXMLg';

  // 3. Nome exato da aba (página) da sua planilha onde a data será inserida.
  const NOME_ABA = 'ERG';

  // 4. Célula de destino para o CABEÇALHO (ex: "A1", "B2", etc.).
  // A data será inserida na célula logo abaixo desta.
  const CELULA_DESTINO = 'A1';
  // --- FIM DAS CONFIGURAÇÕES ---

  try {
    // Acessa a pasta no Google Drive usando o ID fornecido
    const pasta = DriveApp.getFolderById(ID_PASTA);

    // Pega todos os arquivos que estão dentro da pasta
    const arquivos = pasta.getFiles();

    // Variável para armazenar a data mais recente encontrada.
    // Começa como nula.
    let dataMaisRecente = null;

    // Itera sobre cada arquivo na pasta para encontrar o mais recente.
    // O loop continua enquanto houver um próximo arquivo.
    while (arquivos.hasNext()) {
      const arquivo = arquivos.next();
      const dataCriacao = arquivo.getDateCreated();

      // Compara a data de criação do arquivo atual com a data mais recente já armazenada.
      // Se 'dataMaisRecente' ainda for nula (primeiro arquivo do loop) ou
      // se a data do arquivo atual for mais nova, ela é armazenada.
      if (dataMaisRecente === null || dataCriacao > dataMaisRecente) {
        dataMaisRecente = dataCriacao;
      }
    }

    // Após verificar todos os arquivos, confere se alguma data foi encontrada.
    // Se a pasta não estiver vazia, 'dataMaisRecente' terá um valor.
    if (dataMaisRecente) {
      // Acessa a planilha pelo ID
      const planilha = SpreadsheetApp.openById(ID_PLANILHA);
      // Acessa a aba específica pelo nome
      const aba = planilha.getSheetByName(NOME_ABA);

      // Verifica se a aba com o nome especificado realmente existe
      if (aba) {
        // Define a célula do cabeçalho
        const celulaCabecalho = aba.getRange(CELULA_DESTINO);
        celulaCabecalho.setValue('Data ultima coleta');
        celulaCabecalho.setBackground('#cccccc'); // Cor de fundo cinza
        celulaCabecalho.setFontWeight('bold'); // Texto em negrito

        // Define a célula para a data, que será a célula abaixo do cabeçalho
        const celulaData = celulaCabecalho.offset(1, 0);
        celulaData.setValue(dataMaisRecente);
        celulaData.setBackground('#ffffff'); // Cor de fundo branca

        // Registra uma mensagem de sucesso no log de execuções
        Logger.log('Data mais recente (' + dataMaisRecente.toLocaleString() + ') inserida com sucesso na célula ' + celulaData.getA1Notation());
      } else {
        // Se a aba não for encontrada, registra um erro no log
        Logger.log('Erro: A aba com o nome "' + NOME_ABA + '" não foi encontrada na planilha.');
      }
    } else {
      // Se a pasta estiver vazia, registra um aviso no log
      Logger.log('Nenhum arquivo foi encontrado na pasta com o ID especificado.');
    }
  } catch (e) {
    // Captura e registra qualquer outro erro que possa ocorrer durante a execução
    Logger.log('Ocorreu um erro inesperado: ' + e.message);
  }
}
